{"version":3,"file":"AdminService.js","sourceRoot":"./src/","sources":["Service/Admin/AdminService.ts"],"names":[],"mappings":";;;AAEA,sEAAmE;AAEnE,MAAa,YAAY;IAIrB,gBAAgB,CAAC;IAEjB,MAAM,CAAC,IAAgB;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,SAAS;QACL,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YAEvC,IAAI,OAAO,GAAG,uCAAkB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,EAAE;gBACV,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBACtB,OAAO;aACV;YAED,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAE7B,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAvBD,oCAuBC","sourcesContent":["import { HttpServer } from \"jackwebutil\";\r\nimport { PathHelper } from \"../../Util/PathHelper\";\r\nimport { RequestQueryHelper } from \"../../Util/RequestQueryHelper\";\r\n\r\nexport class AdminService {\r\n\r\n    http: HttpServer;\r\n\r\n    constructor() { }\r\n\r\n    Inject(http: HttpServer): void {\r\n        this.http = http;\r\n    }\r\n\r\n    Listening(): void {\r\n        this.http.GetListen(\"/admin\", (req, res) => {\r\n\r\n            let isAdmin = RequestQueryHelper.IsAdministrator(req);\r\n            if (!isAdmin) {\r\n                res.status(500).end();\r\n                return;\r\n            }\r\n            \r\n            res.render(\"admin.html\");\r\n\r\n        });\r\n    }\r\n}"]}