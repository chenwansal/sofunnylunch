"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HomeLoadMenuService = void 0;
class HomeLoadMenuService {
    constructor() { }
    Inject(foodDao, menuDao, homeMenuCao, http) {
        this.foodDao = foodDao;
        this.menuDao = menuDao;
        this.homeMenuCao = homeMenuCao;
        this.http = http;
    }
    Init() {
        this.http.PostListen("/GetMenu", (req, res) => {
            let dto = this.GetTodayMenuDto();
            console.log(dto);
            res.json(dto);
        });
    }
    GetTodayMenuDto() {
        let dto = this.homeMenuCao.GetCachedMenuDto();
        if (dto == null) {
            let menu = this.menuDao.GetTodayMenu();
            let foodArr = [];
            for (let i = 0; i < menu.foodIdArr.length; i += 1) {
                let foodId = menu.foodIdArr[i];
                let food = this.foodDao.GetFood(foodId);
                foodArr.push(food);
            }
            dto = {
                id: menu.id,
                yyyymmdd: menu.yyyymmdd,
                foodArr: foodArr
            };
            this.homeMenuCao.SetCachedMenuDto(dto);
        }
        return dto;
    }
}
exports.HomeLoadMenuService = HomeLoadMenuService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSG9tZUxvYWRNZW51U2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9TZXJ2aWNlL0hvbWUvU2VydmljZS9Ib21lTG9hZE1lbnVTZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQWVBLE1BQWEsbUJBQW1CO0lBTzVCLGdCQUFnQixDQUFDO0lBRWpCLE1BQU0sQ0FBQyxPQUFnQixFQUFFLE9BQWdCLEVBQUUsV0FBd0IsRUFBRSxJQUFnQjtRQUNqRixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUMvQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNyQixDQUFDO0lBRUQsSUFBSTtRQUVBLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRTtZQUMxQyxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDakMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNqQixHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLENBQUMsQ0FBQyxDQUFDO0lBRVAsQ0FBQztJQUVELGVBQWU7UUFFWCxJQUFJLEdBQUcsR0FBWSxJQUFJLENBQUMsV0FBVyxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFFdkQsSUFBSSxHQUFHLElBQUksSUFBSSxFQUFFO1lBRWIsSUFBSSxJQUFJLEdBQWMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNsRCxJQUFJLE9BQU8sR0FBZ0IsRUFBRSxDQUFDO1lBQzlCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUMvQyxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMvQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDeEMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN0QjtZQUVELEdBQUcsR0FBRztnQkFDRixFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUU7Z0JBQ1gsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO2dCQUN2QixPQUFPLEVBQUUsT0FBTzthQUNuQixDQUFBO1lBRUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUUxQztRQUVELE9BQU8sR0FBRyxDQUFDO0lBRWYsQ0FBQztDQUVKO0FBdERELGtEQXNEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBTZXJ2ZXIgfSBmcm9tIFwiamFja3dlYnV0aWxcIjtcclxuaW1wb3J0IHsgRm9vZERhbyB9IGZyb20gXCIuLi8uLi8uLi9EQi9EYW8vRm9vZC9Gb29kRGFvXCI7XHJcbmltcG9ydCB7IE1lbnVEYW8gfSBmcm9tIFwiLi4vLi4vLi4vREIvRGFvL01lbnUvTWVudURhb1wiO1xyXG5pbXBvcnQgeyBGb29kVGFibGUgfSBmcm9tIFwiLi4vLi4vLi4vREIvVGFibGUvRm9vZFRhYmxlXCI7XHJcbmltcG9ydCB7IE1lbnVUYWJsZSB9IGZyb20gXCIuLi8uLi8uLi9EQi9UYWJsZS9NZW51VGFibGVcIjtcclxuaW1wb3J0IHsgSG9tZU1lbnVDYW8gfSBmcm9tIFwiLi4vUmVwb3NpdG9yeS9Ib21lTWVudUNhb1wiO1xyXG5cclxuZXhwb3J0IHR5cGUgTWVudUR0byA9IHtcclxuXHJcbiAgICBpZDogbnVtYmVyO1xyXG4gICAgeXl5eW1tZGQ6IHN0cmluZztcclxuICAgIGZvb2RBcnI6IEZvb2RUYWJsZVtdO1xyXG5cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEhvbWVMb2FkTWVudVNlcnZpY2Uge1xyXG5cclxuICAgIGZvb2REYW86IEZvb2REYW87XHJcbiAgICBtZW51RGFvOiBNZW51RGFvO1xyXG4gICAgaG9tZU1lbnVDYW86IEhvbWVNZW51Q2FvO1xyXG4gICAgaHR0cDogSHR0cFNlcnZlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICAgIEluamVjdChmb29kRGFvOiBGb29kRGFvLCBtZW51RGFvOiBNZW51RGFvLCBob21lTWVudUNhbzogSG9tZU1lbnVDYW8sIGh0dHA6IEh0dHBTZXJ2ZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmZvb2REYW8gPSBmb29kRGFvO1xyXG4gICAgICAgIHRoaXMubWVudURhbyA9IG1lbnVEYW87XHJcbiAgICAgICAgdGhpcy5ob21lTWVudUNhbyA9IGhvbWVNZW51Q2FvO1xyXG4gICAgICAgIHRoaXMuaHR0cCA9IGh0dHA7XHJcbiAgICB9XHJcblxyXG4gICAgSW5pdCgpIHtcclxuXHJcbiAgICAgICAgdGhpcy5odHRwLlBvc3RMaXN0ZW4oXCIvR2V0TWVudVwiLCAocmVxLCByZXMpID0+IHtcclxuICAgICAgICAgICAgbGV0IGR0byA9IHRoaXMuR2V0VG9kYXlNZW51RHRvKCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGR0byk7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKGR0byk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIEdldFRvZGF5TWVudUR0bygpOiBNZW51RHRvIHtcclxuXHJcbiAgICAgICAgbGV0IGR0bzogTWVudUR0byA9IHRoaXMuaG9tZU1lbnVDYW8uR2V0Q2FjaGVkTWVudUR0bygpO1xyXG5cclxuICAgICAgICBpZiAoZHRvID09IG51bGwpIHtcclxuXHJcbiAgICAgICAgICAgIGxldCBtZW51OiBNZW51VGFibGUgPSB0aGlzLm1lbnVEYW8uR2V0VG9kYXlNZW51KCk7XHJcbiAgICAgICAgICAgIGxldCBmb29kQXJyOiBGb29kVGFibGVbXSA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1lbnUuZm9vZElkQXJyLmxlbmd0aDsgaSArPSAxKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZm9vZElkID0gbWVudS5mb29kSWRBcnJbaV07XHJcbiAgICAgICAgICAgICAgICBsZXQgZm9vZCA9IHRoaXMuZm9vZERhby5HZXRGb29kKGZvb2RJZCk7XHJcbiAgICAgICAgICAgICAgICBmb29kQXJyLnB1c2goZm9vZCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGR0byA9IHtcclxuICAgICAgICAgICAgICAgIGlkOiBtZW51LmlkLFxyXG4gICAgICAgICAgICAgICAgeXl5eW1tZGQ6IG1lbnUueXl5eW1tZGQsXHJcbiAgICAgICAgICAgICAgICBmb29kQXJyOiBmb29kQXJyXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuaG9tZU1lbnVDYW8uU2V0Q2FjaGVkTWVudUR0byhkdG8pO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBkdG87XHJcblxyXG4gICAgfVxyXG5cclxufSJdfQ==