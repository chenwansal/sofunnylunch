{"version":3,"file":"Container.js","sourceRoot":"./src/","sources":["DI/Container.ts"],"names":[],"mappings":";;;AAAA,MAAa,SAAS;IAIlB;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC,CAAC;IAED,GAAG,CAAC,QAAgB,EAAE,GAAQ;QAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;SACvC;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC;SAClC;IACL,CAAC;IAED,GAAG,CAAI,QAAgB;QACnB,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,OAAO,MAAW,CAAC;SACtB;aAAM;YACH,MAAM,KAAK,GAAG,QAAQ,CAAC;SAC1B;IACL,CAAC;CAEJ;AA1BD,8BA0BC","sourcesContent":["export class Container {\r\n\r\n    private instanceDic: Map<string, any>;\r\n\r\n    constructor() {\r\n        this.instanceDic = new Map();\r\n    }\r\n\r\n    Set(typeName: string, obj: any): void {\r\n        let exists = this.instanceDic.get(typeName);\r\n        if (exists == null) {\r\n            this.instanceDic.set(typeName, obj);\r\n        } else {\r\n            console.log(\"已存在 \" + typeName);\r\n        }\r\n    }\r\n\r\n    Get<T>(typeName: string): T {\r\n        let exists = this.instanceDic.get(typeName);\r\n        if (exists != null) {\r\n            return exists as T;\r\n        } else {\r\n            throw \"不存在\" + typeName;\r\n        }\r\n    }\r\n\r\n}"]}