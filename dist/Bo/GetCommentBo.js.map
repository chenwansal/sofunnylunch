{"version":3,"file":"GetCommentBo.js","sourceRoot":"./src/","sources":["Bo/GetCommentBo.ts"],"names":[],"mappings":"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","sourcesContent":["import { Daos } from \"../DB/Daos\";\r\n\r\ntype OneFoodComment = {\r\n    foodId: number,\r\n    foodName: string,\r\n    commentArr: Comment[]\r\n}\r\n\r\ntype Comment = {\r\n    yymmdd: string,\r\n    star: number,\r\n    tags: string[],\r\n    content: string\r\n}\r\n\r\nexport class GetCommentBo {\r\n\r\n    constructor() { }\r\n\r\n    // REFACTOR 重复了，需优化结构\r\n    static GetTodayFoodComment(): OneFoodComment[] {\r\n\r\n        let commentDao = Daos.CommentDao;\r\n        let foodDao = Daos.FoodDao;\r\n\r\n        let menuDao = Daos.MenuDao;\r\n\r\n        let todayMenu = menuDao.GetTodayMenu();\r\n\r\n        let map: Map<number, OneFoodComment> = new Map();\r\n\r\n        let allComment = commentDao.GetAllComment();\r\n        for (let i = 0; i < allComment.length; i += 1) {\r\n            let com = allComment[i];\r\n            let foodId = com.foodId;\r\n            if (todayMenu.foodIdArr.findIndex(value => value == foodId) == -1) {\r\n                continue;\r\n            }\r\n            let one = map.get(com.foodId);\r\n            if (!one) {\r\n                one = {\r\n                    foodId: com.foodId,\r\n                    foodName: foodDao.GetFood(com.foodId).name,\r\n                    commentArr: []\r\n                }\r\n                map.set(com.foodId, one);\r\n            }\r\n            let comment: Comment = {\r\n                yymmdd: com.yymmdd,\r\n                star: com.star,\r\n                tags: com.tags,\r\n                content: com.content\r\n            }\r\n            one.commentArr.push(comment);\r\n        }\r\n\r\n        let arr: OneFoodComment[] = [];\r\n\r\n        map.forEach(value => {\r\n            arr.push(value);\r\n        });\r\n\r\n        return arr;\r\n\r\n    }\r\n\r\n    static GetAllComment(): OneFoodComment[] {\r\n\r\n        let commentDao = Daos.CommentDao;\r\n        let foodDao = Daos.FoodDao;\r\n\r\n        let map: Map<number, OneFoodComment> = new Map();\r\n\r\n        let allComment = commentDao.GetAllComment();\r\n        for (let i = 0; i < allComment.length; i += 1) {\r\n            let com = allComment[i];\r\n            let one = map.get(com.foodId);\r\n            if (!one) {\r\n                one = {\r\n                    foodId: com.foodId,\r\n                    foodName: foodDao.GetFood(com.foodId).name,\r\n                    commentArr: []\r\n                }\r\n                map.set(com.foodId, one);\r\n            }\r\n            let comment: Comment = {\r\n                yymmdd: com.yymmdd,\r\n                star: com.star,\r\n                tags: com.tags,\r\n                content: com.content\r\n            }\r\n            one.commentArr.push(comment);\r\n        }\r\n\r\n        let arr: OneFoodComment[] = [];\r\n\r\n        map.forEach(value => {\r\n            arr.push(value);\r\n        });\r\n\r\n        return arr;\r\n\r\n    }\r\n\r\n}"]}